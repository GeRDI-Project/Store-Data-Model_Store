/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.gerdiproject.store.data.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StoreDataModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4467351187421071039L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StoreDataModel\",\"namespace\":\"org.gerdiproject.store.data.model\",\"fields\":[{\"name\":\"TargetStore\",\"type\":\"string\"},{\"name\":\"User\",\"type\":\"string\"},{\"name\":\"researchDataList\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ResearchData\",\"fields\":[{\"name\":\"researchDataIdentifier\",\"type\":\"string\"},{\"name\":\"researchDataURL\",\"type\":\"string\"},{\"name\":\"researchDataLabel\",\"type\":\"string\"}]}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StoreDataModel> ENCODER =
      new BinaryMessageEncoder<StoreDataModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StoreDataModel> DECODER =
      new BinaryMessageDecoder<StoreDataModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<StoreDataModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<StoreDataModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<StoreDataModel>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this StoreDataModel to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a StoreDataModel from a ByteBuffer. */
  public static StoreDataModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence TargetStore;
  @Deprecated public java.lang.CharSequence User;
  @Deprecated public java.util.List<org.gerdiproject.store.data.model.ResearchData> researchDataList;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StoreDataModel() {}

  /**
   * All-args constructor.
   * @param TargetStore The new value for TargetStore
   * @param User The new value for User
   * @param researchDataList The new value for researchDataList
   */
  public StoreDataModel(java.lang.CharSequence TargetStore, java.lang.CharSequence User, java.util.List<org.gerdiproject.store.data.model.ResearchData> researchDataList) {
    this.TargetStore = TargetStore;
    this.User = User;
    this.researchDataList = researchDataList;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return TargetStore;
    case 1: return User;
    case 2: return researchDataList;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: TargetStore = (java.lang.CharSequence)value$; break;
    case 1: User = (java.lang.CharSequence)value$; break;
    case 2: researchDataList = (java.util.List<org.gerdiproject.store.data.model.ResearchData>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'TargetStore' field.
   * @return The value of the 'TargetStore' field.
   */
  public java.lang.CharSequence getTargetStore() {
    return TargetStore;
  }

  /**
   * Sets the value of the 'TargetStore' field.
   * @param value the value to set.
   */
  public void setTargetStore(java.lang.CharSequence value) {
    this.TargetStore = value;
  }

  /**
   * Gets the value of the 'User' field.
   * @return The value of the 'User' field.
   */
  public java.lang.CharSequence getUser() {
    return User;
  }

  /**
   * Sets the value of the 'User' field.
   * @param value the value to set.
   */
  public void setUser(java.lang.CharSequence value) {
    this.User = value;
  }

  /**
   * Gets the value of the 'researchDataList' field.
   * @return The value of the 'researchDataList' field.
   */
  public java.util.List<org.gerdiproject.store.data.model.ResearchData> getResearchDataList() {
    return researchDataList;
  }

  /**
   * Sets the value of the 'researchDataList' field.
   * @param value the value to set.
   */
  public void setResearchDataList(java.util.List<org.gerdiproject.store.data.model.ResearchData> value) {
    this.researchDataList = value;
  }

  /**
   * Creates a new StoreDataModel RecordBuilder.
   * @return A new StoreDataModel RecordBuilder
   */
  public static org.gerdiproject.store.data.model.StoreDataModel.Builder newBuilder() {
    return new org.gerdiproject.store.data.model.StoreDataModel.Builder();
  }

  /**
   * Creates a new StoreDataModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StoreDataModel RecordBuilder
   */
  public static org.gerdiproject.store.data.model.StoreDataModel.Builder newBuilder(org.gerdiproject.store.data.model.StoreDataModel.Builder other) {
    return new org.gerdiproject.store.data.model.StoreDataModel.Builder(other);
  }

  /**
   * Creates a new StoreDataModel RecordBuilder by copying an existing StoreDataModel instance.
   * @param other The existing instance to copy.
   * @return A new StoreDataModel RecordBuilder
   */
  public static org.gerdiproject.store.data.model.StoreDataModel.Builder newBuilder(org.gerdiproject.store.data.model.StoreDataModel other) {
    return new org.gerdiproject.store.data.model.StoreDataModel.Builder(other);
  }

  /**
   * RecordBuilder for StoreDataModel instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StoreDataModel>
    implements org.apache.avro.data.RecordBuilder<StoreDataModel> {

    private java.lang.CharSequence TargetStore;
    private java.lang.CharSequence User;
    private java.util.List<org.gerdiproject.store.data.model.ResearchData> researchDataList;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.gerdiproject.store.data.model.StoreDataModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.TargetStore)) {
        this.TargetStore = data().deepCopy(fields()[0].schema(), other.TargetStore);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.User)) {
        this.User = data().deepCopy(fields()[1].schema(), other.User);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.researchDataList)) {
        this.researchDataList = data().deepCopy(fields()[2].schema(), other.researchDataList);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing StoreDataModel instance
     * @param other The existing instance to copy.
     */
    private Builder(org.gerdiproject.store.data.model.StoreDataModel other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.TargetStore)) {
        this.TargetStore = data().deepCopy(fields()[0].schema(), other.TargetStore);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.User)) {
        this.User = data().deepCopy(fields()[1].schema(), other.User);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.researchDataList)) {
        this.researchDataList = data().deepCopy(fields()[2].schema(), other.researchDataList);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'TargetStore' field.
      * @return The value.
      */
    public java.lang.CharSequence getTargetStore() {
      return TargetStore;
    }

    /**
      * Sets the value of the 'TargetStore' field.
      * @param value The value of 'TargetStore'.
      * @return This builder.
      */
    public org.gerdiproject.store.data.model.StoreDataModel.Builder setTargetStore(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.TargetStore = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'TargetStore' field has been set.
      * @return True if the 'TargetStore' field has been set, false otherwise.
      */
    public boolean hasTargetStore() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'TargetStore' field.
      * @return This builder.
      */
    public org.gerdiproject.store.data.model.StoreDataModel.Builder clearTargetStore() {
      TargetStore = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'User' field.
      * @return The value.
      */
    public java.lang.CharSequence getUser() {
      return User;
    }

    /**
      * Sets the value of the 'User' field.
      * @param value The value of 'User'.
      * @return This builder.
      */
    public org.gerdiproject.store.data.model.StoreDataModel.Builder setUser(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.User = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'User' field has been set.
      * @return True if the 'User' field has been set, false otherwise.
      */
    public boolean hasUser() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'User' field.
      * @return This builder.
      */
    public org.gerdiproject.store.data.model.StoreDataModel.Builder clearUser() {
      User = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'researchDataList' field.
      * @return The value.
      */
    public java.util.List<org.gerdiproject.store.data.model.ResearchData> getResearchDataList() {
      return researchDataList;
    }

    /**
      * Sets the value of the 'researchDataList' field.
      * @param value The value of 'researchDataList'.
      * @return This builder.
      */
    public org.gerdiproject.store.data.model.StoreDataModel.Builder setResearchDataList(java.util.List<org.gerdiproject.store.data.model.ResearchData> value) {
      validate(fields()[2], value);
      this.researchDataList = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'researchDataList' field has been set.
      * @return True if the 'researchDataList' field has been set, false otherwise.
      */
    public boolean hasResearchDataList() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'researchDataList' field.
      * @return This builder.
      */
    public org.gerdiproject.store.data.model.StoreDataModel.Builder clearResearchDataList() {
      researchDataList = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StoreDataModel build() {
      try {
        StoreDataModel record = new StoreDataModel();
        record.TargetStore = fieldSetFlags()[0] ? this.TargetStore : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.User = fieldSetFlags()[1] ? this.User : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.researchDataList = fieldSetFlags()[2] ? this.researchDataList : (java.util.List<org.gerdiproject.store.data.model.ResearchData>) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StoreDataModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<StoreDataModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StoreDataModel>
    READER$ = (org.apache.avro.io.DatumReader<StoreDataModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
